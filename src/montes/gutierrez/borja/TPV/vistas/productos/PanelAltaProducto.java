package montes.gutierrez.borja.TPV.vistas.productos;

import montes.gutierrez.borja.TPV.vistas.principalFrame.PrincipalFrame;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import montes.gutierrez.borja.TPV.acciones.productos.AltaProductos;

/**
 * Clase que define el panel para introducir nuevos productos.
 *
 * @author Borja Montes Gutiérrez
 */
public class PanelAltaProducto extends javax.swing.JPanel {

    /**
     * Variables
     */
    private AltaProductos altaProductos;
    private PrincipalFrame frame;

    /**
     * Constructor por defecto.
     *
     * @param frame PrincipalFrame donde se va a dibujar el panel de alta
     * producto.
     * @throws SQLException Excepción lanzada por posibles fallos en la
     * sentencia o servidor.
     * @throws InstantiationException Excepción lanzada por posibles fallos en
     * la sentencia o servidor.
     * @throws IllegalAccessException Excepción lanzada por posibles fallos en
     * la sentencia o servidor.
     * @throws ClassNotFoundException Excepción lanzada por posibles fallos en
     * la sentencia o servidor.
     */
    public PanelAltaProducto(PrincipalFrame frame) throws SQLException,
            InstantiationException, IllegalAccessException,
            ClassNotFoundException {
        initComponents();
        altaProductos = new AltaProductos(this);
    }

    /**
     * Método para resetear los textos de los campos.
     */
    private void reset() {
        txtNameProduct.setText("");
        txtDescriptionProduct.setText("");
        txtPriceProduct.setText("");
        txtStockProduct.setText("");
    }

    /**
     * Getter del PrincipalFrame.
     *
     * @return frame principal.
     */
    public PrincipalFrame getFrame() {
        return frame;
    }

    /**
     * Setter del PrincipalFrame.
     *
     * @param frame PrincipalFrame.
     */
    public void setFrame(PrincipalFrame frame) {
        this.frame = frame;
    }

    /**
     * Getter del JTextField de la decripcion del producto.
     *
     * @return txtDescriptionProduct.
     */
    public JTextField getTxtDescriptionProduct() {
        return txtDescriptionProduct;
    }

    /**
     * Setter del JTextField de la decripcion del producto.
     *
     * @param txtDescriptionProduct String.
     */
    public void setTxtDescriptionProduct(JTextField txtDescriptionProduct) {
        this.txtDescriptionProduct = txtDescriptionProduct;
    }

    /**
     * Getter del JTextField del nombre del producto.
     *
     * @return txtNameProduct.
     */
    public JTextField getTxtNameProduct() {
        return txtNameProduct;
    }

    /**
     * Setter del JTextField del nombre del producto.
     *
     * @param txtNameProduct String.
     */
    public void setTxtNameProduct(JTextField txtNameProduct) {
        this.txtNameProduct = txtNameProduct;
    }

    /**
     * Getter del JTextField del precio del producto.
     *
     * @return txtPriceProduct.
     */
    public JTextField getTxtPriceProduct() {
        return txtPriceProduct;
    }

    /**
     * Setter del JTextField del precio del producto.
     *
     * @param txtPriceProduct String.
     */
    public void setTxtPriceProduct(JTextField txtPriceProduct) {
        this.txtPriceProduct = txtPriceProduct;
    }

    /**
     * Getter del JTextField del stock del producto.
     *
     * @return txtStockProduct.
     */
    public JTextField getTxtStockProduct() {
        return txtStockProduct;
    }

    /**
     * Setter del JTextField del stock del producto.
     *
     * @param txtStockProduct String.
     */
    public void setTxtStockProduct(JTextField txtStockProduct) {
        this.txtStockProduct = txtStockProduct;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbNameProduct = new javax.swing.JLabel();
        txtNameProduct = new javax.swing.JTextField();
        lbDescriptionProduct = new javax.swing.JLabel();
        txtDescriptionProduct = new javax.swing.JTextField();
        lbPriceProduct = new javax.swing.JLabel();
        txtPriceProduct = new javax.swing.JTextField();
        lbStockProduct = new javax.swing.JLabel();
        txtStockProduct = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Panel Alta Producto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        setPreferredSize(new java.awt.Dimension(500, 400));

        lbNameProduct.setText("Nombre:");

        lbDescriptionProduct.setText("Descripción:");

        lbPriceProduct.setText("Precio:");

        lbStockProduct.setText("Stock");

        btnSave.setText("Guardar");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbDescriptionProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbNameProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbPriceProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbStockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNameProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDescriptionProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPriceProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStockProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDescriptionProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescriptionProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        if (!txtNameProduct.getText().trim().isEmpty()
                && !txtDescriptionProduct.getText().trim().isEmpty()
                && !txtPriceProduct.getText().trim().isEmpty()
                && !txtStockProduct.getText().trim().isEmpty()) {

            altaProductos.save();
            reset();
            JOptionPane.showMessageDialog(this, "Producto guardado");
        } else {
            JOptionPane.showMessageDialog(this, "Datos del producto incompletos");
        }
    }//GEN-LAST:event_btnSaveMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lbDescriptionProduct;
    private javax.swing.JLabel lbNameProduct;
    private javax.swing.JLabel lbPriceProduct;
    private javax.swing.JLabel lbStockProduct;
    private javax.swing.JTextField txtDescriptionProduct;
    private javax.swing.JTextField txtNameProduct;
    private javax.swing.JTextField txtPriceProduct;
    private javax.swing.JTextField txtStockProduct;
    // End of variables declaration//GEN-END:variables
}
